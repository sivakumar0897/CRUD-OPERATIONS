{"ast":null,"code":"var _jsxFileName = \"/home/raj/Documents/project/src/pages/LoginPage.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useAuth } from \"../../context/AuthContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { TextField, Button, Box, Typography, Container } from \"@mui/material\";\nimport { login } from \"../api/userApi\"; // Mock API\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const {\n    login: authenticate\n  } = useAuth();\n  const navigate = useNavigate();\n  const handleLogin = async values => {\n    try {\n      const response = await login(values);\n      authenticate(response.data.token); // Save token and authenticate user\n      toast.success(\"Login successful!\");\n      navigate(\"/users\");\n    } catch (error) {\n      toast.error(\"Invalid login credentials.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 8,\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: \"\",\n          password: \"\"\n        },\n        validationSchema: Yup.object({\n          email: Yup.string().email(\"Invalid email address\").required(\"Email is required\"),\n          password: Yup.string().required(\"Password is required\")\n        }),\n        onSubmit: handleLogin,\n        children: ({\n          isSubmitting\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            as: TextField,\n            name: \"email\",\n            label: \"Email\",\n            fullWidth: true,\n            margin: \"normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            as: TextField,\n            name: \"password\",\n            label: \"Password\",\n            type: \"password\",\n            fullWidth: true,\n            margin: \"normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\",\n            disabled: isSubmitting,\n            sx: {\n              mt: 3\n            },\n            children: isSubmitting ? \"Logging in...\" : \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"3BPHpl0c9YrUbI1oQdIxqRDoHnI=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","Formik","Form","Field","Yup","useAuth","useNavigate","TextField","Button","Box","Typography","Container","login","toast","jsxDEV","_jsxDEV","LoginPage","_s","authenticate","navigate","handleLogin","values","response","data","token","success","error","component","maxWidth","children","sx","mt","display","flexDirection","alignItems","variant","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","email","password","validationSchema","object","string","required","onSubmit","isSubmitting","as","name","label","fullWidth","margin","type","color","disabled","_c","$RefreshReg$"],"sources":["/home/raj/Documents/project/src/pages/LoginPage.jsx"],"sourcesContent":["import React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useAuth } from \"../../context/AuthContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { TextField, Button, Box, Typography, Container } from \"@mui/material\";\nimport { login } from \"../api/userApi\"; // Mock API\nimport { toast } from \"react-toastify\";\n\nconst LoginPage = () => {\n  const { login: authenticate } = useAuth();\n  const navigate = useNavigate();\n\n  const handleLogin = async (values) => {\n    try {\n      const response = await login(values);\n      authenticate(response.data.token); // Save token and authenticate user\n      toast.success(\"Login successful!\");\n      navigate(\"/users\");\n    } catch (error) {\n      toast.error(\"Invalid login credentials.\");\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Box sx={{ mt: 8, display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Login\n        </Typography>\n        <Formik\n          initialValues={{ email: \"\", password: \"\" }}\n          validationSchema={Yup.object({\n            email: Yup.string().email(\"Invalid email address\").required(\"Email is required\"),\n            password: Yup.string().required(\"Password is required\"),\n          })}\n          onSubmit={handleLogin}\n        >\n          {({ isSubmitting }) => (\n            <Form>\n              <Field as={TextField} name=\"email\" label=\"Email\" fullWidth margin=\"normal\" />\n              <Field\n                as={TextField}\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                fullWidth\n                margin=\"normal\"\n              />\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={isSubmitting}\n                sx={{ mt: 3 }}\n              >\n                {isSubmitting ? \"Logging in...\" : \"Login\"}\n              </Button>\n            </Form>\n          )}\n        </Formik>\n      </Box>\n    </Container>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}