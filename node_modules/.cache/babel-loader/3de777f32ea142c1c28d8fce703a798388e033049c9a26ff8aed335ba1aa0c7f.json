{"ast":null,"code":"import { getUsers, createUser, updateUser, deleteUser } from '../../api/userApi';\n\n// Action Creators\nexport const fetchUsersRequest = () => {\n  console.log('Dispatching FETCH_USERS_REQUEST');\n  return {\n    type: 'FETCH_USERS_REQUEST'\n  };\n};\nexport const fetchUsersSuccess = payload => ({\n  type: 'FETCH_USERS_SUCCESS',\n  payload\n});\nexport const fetchUsersFailure = error => ({\n  type: 'FETCH_USERS_FAILURE',\n  payload: error\n});\nexport const fetchUsers = (page = 1) => async dispatch => {\n  dispatch(fetchUsersRequest());\n  console.log('Fetching users for page:', page); // Debug log\n  try {\n    const response = await getUsers(page);\n    console.log('API Response:', response.data); // Debug log\n    dispatch(fetchUsersSuccess({\n      data: response.data.data,\n      totalPages: response.data.total_pages,\n      page: response.data.page\n    }));\n  } catch (error) {\n    console.error('Fetch Users Error:', error.message); // Debug log\n    dispatch(fetchUsersFailure(error.message));\n  }\n};\n\n// Create User\nexport const addUser = userData => async dispatch => {\n  try {\n    await createUser(userData);\n    dispatch(fetchUsers()); // Refetch users after adding\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// Update User\nexport const editUser = (id, userData) => async dispatch => {\n  try {\n    await updateUser(id, userData);\n    dispatch(fetchUsers()); // Refetch users after updating\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// Delete User\nexport const removeUser = id => async dispatch => {\n  try {\n    await deleteUser(id);\n    dispatch(fetchUsers()); // Refetch users after deleting\n  } catch (error) {\n    console.error(error);\n  }\n};","map":{"version":3,"names":["getUsers","createUser","updateUser","deleteUser","fetchUsersRequest","console","log","type","fetchUsersSuccess","payload","fetchUsersFailure","error","fetchUsers","page","dispatch","response","data","totalPages","total_pages","message","addUser","userData","editUser","id","removeUser"],"sources":["/home/raj/Documents/project/src/redux/actions/userActions.js"],"sourcesContent":["import { getUsers, createUser, updateUser, deleteUser } from '../../api/userApi';\n\n// Action Creators\nexport const fetchUsersRequest = () => {\n  console.log('Dispatching FETCH_USERS_REQUEST');\n  return { type: 'FETCH_USERS_REQUEST' };\n};\n\nexport const fetchUsersSuccess = (payload) => ({ type: 'FETCH_USERS_SUCCESS', payload });\nexport const fetchUsersFailure = (error) => ({ type: 'FETCH_USERS_FAILURE', payload: error });\n\nexport const fetchUsers = (page = 1) => async (dispatch) => {\n  dispatch(fetchUsersRequest());\n  console.log('Fetching users for page:', page); // Debug log\n  try {\n    const response = await getUsers(page);\n    console.log('API Response:', response.data); // Debug log\n    dispatch(fetchUsersSuccess({\n      data: response.data.data,\n      totalPages: response.data.total_pages,\n      page: response.data.page,\n    }));\n  } catch (error) {\n    console.error('Fetch Users Error:', error.message); // Debug log\n    dispatch(fetchUsersFailure(error.message));\n  }\n};\n\n\n\n// Create User\nexport const addUser = (userData) => async (dispatch) => {\n  try {\n    await createUser(userData);\n    dispatch(fetchUsers()); // Refetch users after adding\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// Update User\nexport const editUser = (id, userData) => async (dispatch) => {\n  try {\n    await updateUser(id, userData);\n    dispatch(fetchUsers()); // Refetch users after updating\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// Delete User\nexport const removeUser = (id) => async (dispatch) => {\n  try {\n    await deleteUser(id);\n    dispatch(fetchUsers()); // Refetch users after deleting\n  } catch (error) {\n    console.error(error);\n  }\n};\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,UAAU,EAAEC,UAAU,EAAEC,UAAU,QAAQ,mBAAmB;;AAEhF;AACA,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EACrCC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;EAC9C,OAAO;IAAEC,IAAI,EAAE;EAAsB,CAAC;AACxC,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAIC,OAAO,KAAM;EAAEF,IAAI,EAAE,qBAAqB;EAAEE;AAAQ,CAAC,CAAC;AACxF,OAAO,MAAMC,iBAAiB,GAAIC,KAAK,KAAM;EAAEJ,IAAI,EAAE,qBAAqB;EAAEE,OAAO,EAAEE;AAAM,CAAC,CAAC;AAE7F,OAAO,MAAMC,UAAU,GAAGA,CAACC,IAAI,GAAG,CAAC,KAAK,MAAOC,QAAQ,IAAK;EAC1DA,QAAQ,CAACV,iBAAiB,CAAC,CAAC,CAAC;EAC7BC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEO,IAAI,CAAC,CAAC,CAAC;EAC/C,IAAI;IACF,MAAME,QAAQ,GAAG,MAAMf,QAAQ,CAACa,IAAI,CAAC;IACrCR,OAAO,CAACC,GAAG,CAAC,eAAe,EAAES,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;IAC7CF,QAAQ,CAACN,iBAAiB,CAAC;MACzBQ,IAAI,EAAED,QAAQ,CAACC,IAAI,CAACA,IAAI;MACxBC,UAAU,EAAEF,QAAQ,CAACC,IAAI,CAACE,WAAW;MACrCL,IAAI,EAAEE,QAAQ,CAACC,IAAI,CAACH;IACtB,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,OAAOF,KAAK,EAAE;IACdN,OAAO,CAACM,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAACQ,OAAO,CAAC,CAAC,CAAC;IACpDL,QAAQ,CAACJ,iBAAiB,CAACC,KAAK,CAACQ,OAAO,CAAC,CAAC;EAC5C;AACF,CAAC;;AAID;AACA,OAAO,MAAMC,OAAO,GAAIC,QAAQ,IAAK,MAAOP,QAAQ,IAAK;EACvD,IAAI;IACF,MAAMb,UAAU,CAACoB,QAAQ,CAAC;IAC1BP,QAAQ,CAACF,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOD,KAAK,EAAE;IACdN,OAAO,CAACM,KAAK,CAACA,KAAK,CAAC;EACtB;AACF,CAAC;;AAED;AACA,OAAO,MAAMW,QAAQ,GAAGA,CAACC,EAAE,EAAEF,QAAQ,KAAK,MAAOP,QAAQ,IAAK;EAC5D,IAAI;IACF,MAAMZ,UAAU,CAACqB,EAAE,EAAEF,QAAQ,CAAC;IAC9BP,QAAQ,CAACF,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOD,KAAK,EAAE;IACdN,OAAO,CAACM,KAAK,CAACA,KAAK,CAAC;EACtB;AACF,CAAC;;AAED;AACA,OAAO,MAAMa,UAAU,GAAID,EAAE,IAAK,MAAOT,QAAQ,IAAK;EACpD,IAAI;IACF,MAAMX,UAAU,CAACoB,EAAE,CAAC;IACpBT,QAAQ,CAACF,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOD,KAAK,EAAE;IACdN,OAAO,CAACM,KAAK,CAACA,KAAK,CAAC;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}