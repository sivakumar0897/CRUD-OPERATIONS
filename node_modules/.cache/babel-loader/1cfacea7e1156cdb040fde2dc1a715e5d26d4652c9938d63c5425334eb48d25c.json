{"ast":null,"code":"var _jsxFileName = \"/home/raj/Documents/project/src/pages/UserManagementPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchUsers } from '../redux/actions/userActions';\nimport UserList from '../components/Users/UserList';\nimport UserPagination from '../components/Users/UserPagination';\nimport { Box, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserManagementPage = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    users,\n    loading,\n    error,\n    currentPage,\n    totalPages\n  } = useSelector(state => state.user);\n  const [page, setPage] = useState(currentPage);\n\n  // UseEffect runs only when the \"page\" changes\n  useEffect(() => {\n    if (page !== currentPage) {\n      dispatch(fetchUsers(page)); // Fetch users only when the page changes\n    }\n  }, [dispatch, page, currentPage]);\n  if (loading) return /*#__PURE__*/_jsxDEV(Typography, {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(Typography, {\n    color: \"error\",\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: \"Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserList, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserPagination, {\n      totalPages: totalPages,\n      currentPage: page,\n      setPage: setPage // Update page when pagination changes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(UserManagementPage, \"xDRgv5Wl/KrF3uxERhDcatLxwTY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = UserManagementPage;\nexport default UserManagementPage;\nvar _c;\n$RefreshReg$(_c, \"UserManagementPage\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","fetchUsers","UserList","UserPagination","Box","Typography","jsxDEV","_jsxDEV","UserManagementPage","_s","dispatch","users","loading","error","currentPage","totalPages","state","user","page","setPage","children","fileName","_jsxFileName","lineNumber","columnNumber","color","variant","_c","$RefreshReg$"],"sources":["/home/raj/Documents/project/src/pages/UserManagementPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchUsers } from '../redux/actions/userActions';\nimport UserList from '../components/Users/UserList';\nimport UserPagination from '../components/Users/UserPagination';\nimport { Box, Typography } from '@mui/material';\n\nconst UserManagementPage = () => {\n  const dispatch = useDispatch();\n  const { users, loading, error, currentPage, totalPages } = useSelector((state) => state.user);\n  const [page, setPage] = useState(currentPage);\n\n  // UseEffect runs only when the \"page\" changes\n  useEffect(() => {\n    if (page !== currentPage) {\n      dispatch(fetchUsers(page)); // Fetch users only when the page changes\n    }\n  }, [dispatch, page, currentPage]);\n\n  if (loading) return <Typography>Loading...</Typography>;\n  if (error) return <Typography color=\"error\">Error: {error}</Typography>;\n\n  return (\n    <Box>\n      <Typography variant=\"h4\">Users</Typography>\n      <UserList users={users} />\n      <UserPagination\n        totalPages={totalPages}\n        currentPage={page}\n        setPage={setPage} // Update page when pagination changes\n      />\n    </Box>\n  );\n};\n\nexport default UserManagementPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,8BAA8B;AACzD,OAAOC,QAAQ,MAAM,8BAA8B;AACnD,OAAOC,cAAc,MAAM,oCAAoC;AAC/D,SAASC,GAAG,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEW,KAAK;IAAEC,OAAO;IAAEC,KAAK;IAAEC,WAAW;IAAEC;EAAW,CAAC,GAAGhB,WAAW,CAAEiB,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EAC7F,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGrB,QAAQ,CAACgB,WAAW,CAAC;;EAE7C;EACAjB,SAAS,CAAC,MAAM;IACd,IAAIqB,IAAI,KAAKJ,WAAW,EAAE;MACxBJ,QAAQ,CAACT,UAAU,CAACiB,IAAI,CAAC,CAAC,CAAC,CAAC;IAC9B;EACF,CAAC,EAAE,CAACR,QAAQ,EAAEQ,IAAI,EAAEJ,WAAW,CAAC,CAAC;EAEjC,IAAIF,OAAO,EAAE,oBAAOL,OAAA,CAACF,UAAU;IAAAe,QAAA,EAAC;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAY,CAAC;EACvD,IAAIX,KAAK,EAAE,oBAAON,OAAA,CAACF,UAAU;IAACoB,KAAK,EAAC,OAAO;IAAAL,QAAA,GAAC,SAAO,EAACP,KAAK;EAAA;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAa,CAAC;EAEvE,oBACEjB,OAAA,CAACH,GAAG;IAAAgB,QAAA,gBACFb,OAAA,CAACF,UAAU;MAACqB,OAAO,EAAC,IAAI;MAAAN,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAC3CjB,OAAA,CAACL,QAAQ;MAACS,KAAK,EAAEA;IAAM;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1BjB,OAAA,CAACJ,cAAc;MACbY,UAAU,EAAEA,UAAW;MACvBD,WAAW,EAAEI,IAAK;MAClBC,OAAO,EAAEA,OAAQ,CAAC;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACf,EAAA,CA1BID,kBAAkB;EAAA,QACLR,WAAW,EAC+BD,WAAW;AAAA;AAAA4B,EAAA,GAFlEnB,kBAAkB;AA4BxB,eAAeA,kBAAkB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}