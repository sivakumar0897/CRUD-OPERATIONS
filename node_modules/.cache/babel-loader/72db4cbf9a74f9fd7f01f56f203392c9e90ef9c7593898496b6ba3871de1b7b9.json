{"ast":null,"code":"var _jsxFileName = \"/home/raj/Documents/project/src/components/Auth/ForgotPassword.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { Container, Box, TextField, Button, Typography, CssBaseline, Alert } from '@mui/material';\nimport { sendPasswordReset } from '../../api/userApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object({\n  email: Yup.string().email('Invalid email address').required('Email is required')\n});\nconst ForgotPassword = () => {\n  _s();\n  const [successMessage, setSuccessMessage] = React.useState('');\n  const [errorMessage, setErrorMessage] = React.useState('');\n  const handleSubmit = async (values, {\n    setSubmitting\n  }) => {\n    try {\n      await sendPasswordReset(values.email); // Send password reset request\n      setSuccessMessage('Password reset instructions have been sent to your email.');\n      setErrorMessage('');\n    } catch (error) {\n      setErrorMessage('Failed to send password reset instructions.');\n      setSuccessMessage('');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginTop: 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: ''\n        },\n        validationSchema: validationSchema,\n        onSubmit: handleSubmit,\n        children: ({\n          isSubmitting\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [successMessage && /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"success\",\n            sx: {\n              width: '100%',\n              mb: 2\n            },\n            children: successMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), errorMessage && /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"error\",\n            sx: {\n              width: '100%',\n              mb: 2\n            },\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            as: TextField,\n            name: \"email\",\n            label: \"Email Address\",\n            fullWidth: true,\n            margin: \"normal\",\n            error: !!ErrorMessage,\n            helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\",\n            disabled: isSubmitting,\n            sx: {\n              mt: 3,\n              mb: 2\n            },\n            children: \"Send Reset Instructions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPassword, \"ak2lvdRGPHC1luo2QsqjNwkxT4k=\");\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","Yup","Container","Box","TextField","Button","Typography","CssBaseline","Alert","sendPasswordReset","jsxDEV","_jsxDEV","validationSchema","object","email","string","required","ForgotPassword","_s","successMessage","setSuccessMessage","useState","errorMessage","setErrorMessage","handleSubmit","values","setSubmitting","error","component","maxWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","marginTop","display","flexDirection","alignItems","variant","initialValues","onSubmit","isSubmitting","severity","width","mb","as","name","label","fullWidth","margin","helperText","type","color","disabled","mt","_c","$RefreshReg$"],"sources":["/home/raj/Documents/project/src/components/Auth/ForgotPassword.jsx"],"sourcesContent":["import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Container,\n  Box,\n  TextField,\n  Button,\n  Typography,\n  CssBaseline,\n  Alert,\n} from '@mui/material';\nimport { sendPasswordReset } from '../../api/userApi';\n\nconst validationSchema = Yup.object({\n  email: Yup.string()\n    .email('Invalid email address')\n    .required('Email is required'),\n});\n\nconst ForgotPassword = () => {\n  const [successMessage, setSuccessMessage] = React.useState('');\n  const [errorMessage, setErrorMessage] = React.useState('');\n\n  const handleSubmit = async (values, { setSubmitting }) => {\n    try {\n      await sendPasswordReset(values.email); // Send password reset request\n      setSuccessMessage('Password reset instructions have been sent to your email.');\n      setErrorMessage('');\n    } catch (error) {\n      setErrorMessage('Failed to send password reset instructions.');\n      setSuccessMessage('');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Typography component=\"h1\" variant=\"h5\">\n          Forgot Password\n        </Typography>\n        <Formik\n          initialValues={{ email: '' }}\n          validationSchema={validationSchema}\n          onSubmit={handleSubmit}\n        >\n          {({ isSubmitting }) => (\n            <Form>\n              {successMessage && (\n                <Alert severity=\"success\" sx={{ width: '100%', mb: 2 }}>\n                  {successMessage}\n                </Alert>\n              )}\n              {errorMessage && (\n                <Alert severity=\"error\" sx={{ width: '100%', mb: 2 }}>\n                  {errorMessage}\n                </Alert>\n              )}\n              <Field\n                as={TextField}\n                name=\"email\"\n                label=\"Email Address\"\n                fullWidth\n                margin=\"normal\"\n                error={!!ErrorMessage}\n                helperText={<ErrorMessage name=\"email\" />}\n              />\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={isSubmitting}\n                sx={{ mt: 3, mb: 2 }}\n              >\n                Send Reset Instructions\n              </Button>\n            </Form>\n          )}\n        </Formik>\n      </Box>\n    </Container>\n  );\n};\n\nexport default ForgotPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}