{"ast":null,"code":"var _jsxFileName = \"/home/raj/Documents/project/src/components/Auth/ForgotPassword.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { toast } from \"react-toastify\";\nimport { Container, Box, TextField, Button, Typography, CssBaseline, Link } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().email(\"Invalid email address\").required(\"Email is required\")\n});\nconst ForgotPassword = () => {\n  _s();\n  const navigate = useNavigate();\n  const handleForgotPassword = async values => {\n    try {\n      console.log(\"Sending reset password email to:\", values.email);\n      toast.success(\"Password reset instructions sent to your email!\");\n      navigate(\"/\");\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || \"Failed to send password reset instructions.\";\n      toast.error(errorMessage);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginTop: 8,\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: \"\"\n        },\n        validationSchema: validationSchema,\n        onSubmit: handleForgotPassword,\n        children: ({\n          isSubmitting\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            as: TextField,\n            name: \"email\",\n            label: \"Email Address\",\n            fullWidth: true,\n            margin: \"normal\",\n            error: !!ErrorMessage.email,\n            helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\",\n            disabled: isSubmitting,\n            sx: {\n              mt: 3,\n              mb: 2\n            },\n            children: \"Send Reset Instructions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              textAlign: \"center\",\n              mt: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: [\"Remember your password?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n                onClick: () => navigate(\"/\"),\n                underline: \"hover\",\n                style: {\n                  cursor: \"pointer\"\n                },\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPassword, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useNavigate","Formik","Form","Field","ErrorMessage","Yup","toast","Container","Box","TextField","Button","Typography","CssBaseline","Link","jsxDEV","_jsxDEV","validationSchema","object","shape","email","string","required","ForgotPassword","_s","navigate","handleForgotPassword","values","console","log","success","error","_error$response","_error$response$data","errorMessage","response","data","component","maxWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","marginTop","display","flexDirection","alignItems","variant","initialValues","onSubmit","isSubmitting","as","name","label","fullWidth","margin","helperText","type","color","disabled","mt","mb","textAlign","onClick","underline","style","cursor","_c","$RefreshReg$"],"sources":["/home/raj/Documents/project/src/components/Auth/ForgotPassword.jsx"],"sourcesContent":["import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { toast } from \"react-toastify\";\nimport {\n  Container,\n  Box,\n  TextField,\n  Button,\n  Typography,\n  CssBaseline,\n  Link,\n} from \"@mui/material\";\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().email(\"Invalid email address\").required(\"Email is required\"),\n});\n\nconst ForgotPassword = () => {\n  const navigate = useNavigate();\n\n  const handleForgotPassword = async (values) => {\n    try {\n      console.log(\"Sending reset password email to:\", values.email);\n      toast.success(\"Password reset instructions sent to your email!\");\n      navigate(\"/\");\n    } catch (error) {\n      const errorMessage =\n        error.response?.data?.error || \"Failed to send password reset instructions.\";\n      toast.error(errorMessage);\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        sx={{\n          marginTop: 8,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <Typography component=\"h1\" variant=\"h5\">\n          Forgot Password\n        </Typography>\n        <Formik\n          initialValues={{ email: \"\" }}\n          validationSchema={validationSchema}\n          onSubmit={handleForgotPassword}\n        >\n          {({ isSubmitting }) => (\n            <Form>\n              <Field\n                as={TextField}\n                name=\"email\"\n                label=\"Email Address\"\n                fullWidth\n                margin=\"normal\"\n                error={!!ErrorMessage.email}\n                helperText={<ErrorMessage name=\"email\" />}\n              />\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={isSubmitting}\n                sx={{ mt: 3, mb: 2 }}\n              >\n                Send Reset Instructions\n              </Button>\n              <Box sx={{ textAlign: \"center\", mt: 2 }}>\n                <Typography variant=\"body2\">\n                  Remember your password?{\" \"}\n                  <Link\n                    onClick={() => navigate(\"/\")}\n                    underline=\"hover\"\n                    style={{ cursor: \"pointer\" }}\n                  >\n                    Login\n                  </Link>\n                </Typography>\n              </Box>\n            </Form>\n          )}\n        </Formik>\n      </Box>\n    </Container>\n  );\n};\n\nexport default ForgotPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}