{"ast":null,"code":"var _jsxFileName = \"/home/raj/Documents/project/src/components/Auth/Login.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { TextField, Button, Typography, Box, Container, CssBaseline } from \"@mui/material\";\nimport { login } from \"../api/userApi\"; // Mock API call\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const handleLogin = async values => {\n    try {\n      const response = await login(values);\n      toast.success(\"Login successful!\");\n      localStorage.setItem(\"token\", response.data.token); // Save token in localStorage\n      navigate(\"/users\"); // Redirect to the user management page\n    } catch (error) {\n      toast.error(\"Invalid login credentials. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginTop: 8,\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: \"\",\n          password: \"\"\n        },\n        validationSchema: Yup.object({\n          email: Yup.string().email(\"Invalid email address\").required(\"Email is required\"),\n          password: Yup.string().required(\"Password is required\")\n        }),\n        onSubmit: handleLogin,\n        children: ({\n          isSubmitting,\n          errors,\n          touched\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            as: TextField,\n            name: \"email\",\n            label: \"Email Address\",\n            fullWidth: true,\n            margin: \"normal\",\n            error: touched.email && Boolean(errors.email),\n            helperText: touched.email && errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            as: TextField,\n            name: \"password\",\n            label: \"Password\",\n            type: \"password\",\n            fullWidth: true,\n            margin: \"normal\",\n            error: touched.password && Boolean(errors.password),\n            helperText: touched.password && errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\",\n            disabled: isSubmitting,\n            sx: {\n              mt: 3,\n              mb: 2\n            },\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useNavigate","Formik","Form","Field","Yup","TextField","Button","Typography","Box","Container","CssBaseline","login","toast","jsxDEV","_jsxDEV","LoginPage","_s","navigate","handleLogin","values","response","success","localStorage","setItem","data","token","error","component","maxWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","marginTop","display","flexDirection","alignItems","variant","initialValues","email","password","validationSchema","object","string","required","onSubmit","isSubmitting","errors","touched","as","name","label","fullWidth","margin","Boolean","helperText","type","color","disabled","mt","mb","_c","$RefreshReg$"],"sources":["/home/raj/Documents/project/src/components/Auth/Login.jsx"],"sourcesContent":["import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { TextField, Button, Typography, Box, Container, CssBaseline } from \"@mui/material\";\nimport { login } from \"../api/userApi\"; // Mock API call\nimport { toast } from \"react-toastify\";\n\nconst LoginPage = () => {\n  const navigate = useNavigate();\n\n  const handleLogin = async (values) => {\n    try {\n      const response = await login(values);\n      toast.success(\"Login successful!\");\n      localStorage.setItem(\"token\", response.data.token); // Save token in localStorage\n      navigate(\"/users\"); // Redirect to the user management page\n    } catch (error) {\n      toast.error(\"Invalid login credentials. Please try again.\");\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        sx={{\n          marginTop: 8,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <Typography component=\"h1\" variant=\"h5\">\n          Login\n        </Typography>\n        <Formik\n          initialValues={{ email: \"\", password: \"\" }}\n          validationSchema={Yup.object({\n            email: Yup.string().email(\"Invalid email address\").required(\"Email is required\"),\n            password: Yup.string().required(\"Password is required\"),\n          })}\n          onSubmit={handleLogin}\n        >\n          {({ isSubmitting, errors, touched }) => (\n            <Form>\n              <Field\n                as={TextField}\n                name=\"email\"\n                label=\"Email Address\"\n                fullWidth\n                margin=\"normal\"\n                error={touched.email && Boolean(errors.email)}\n                helperText={touched.email && errors.email}\n              />\n              <Field\n                as={TextField}\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                fullWidth\n                margin=\"normal\"\n                error={touched.password && Boolean(errors.password)}\n                helperText={touched.password && errors.password}\n              />\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={isSubmitting}\n                sx={{ mt: 3, mb: 2 }}\n              >\n                Log In\n              </Button>\n            </Form>\n          )}\n        </Formik>\n      </Box>\n    </Container>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}