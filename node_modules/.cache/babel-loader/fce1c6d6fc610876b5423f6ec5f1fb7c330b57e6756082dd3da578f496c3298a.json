{"ast":null,"code":"var _jsxFileName = \"/home/raj/Documents/project/src/components/Auth/Login.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { login } from '../../api/userApi';\nimport { Box, Button, TextField, Typography, Container, CssBaseline, Alert } from '@mui/material';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\n// Validation schema using Yup\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object({\n  email: Yup.string().email('Invalid email address').required('Email is required'),\n  password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required')\n});\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const handleLogin = async (values, {\n    setSubmitting,\n    setErrors\n  }) => {\n    try {\n      const response = await login(values);\n      localStorage.setItem('token', response.data.token);\n      navigate('/users');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setErrors({\n        apiError: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'An unexpected error occurred'\n      });\n    }\n    setSubmitting(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginTop: 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: '',\n          password: ''\n        },\n        validationSchema: validationSchema,\n        onSubmit: handleLogin,\n        children: ({\n          isSubmitting\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"apiError\",\n              component: Alert,\n              severity: \"error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Field, {\n              as: TextField,\n              name: \"email\",\n              label: \"Email Address\",\n              fullWidth: true,\n              error: !!(ErrorMessage && ErrorMessage.name === 'email'),\n              helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 31\n              }, this),\n              autoComplete: \"email\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Field, {\n              as: TextField,\n              name: \"password\",\n              label: \"Password\",\n              type: \"password\",\n              fullWidth: true,\n              error: !!(ErrorMessage && ErrorMessage.name === 'password'),\n              helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 31\n              }, this),\n              autoComplete: \"current-password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            disabled: isSubmitting,\n            sx: {\n              mt: 3,\n              mb: 2\n            },\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useNavigate","login","Box","Button","TextField","Typography","Container","CssBaseline","Alert","Formik","Form","Field","ErrorMessage","Yup","jsxDEV","_jsxDEV","validationSchema","object","email","string","required","password","min","Login","_s","navigate","handleLogin","values","setSubmitting","setErrors","response","localStorage","setItem","data","token","error","_error$response","_error$response$data","apiError","component","maxWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","marginTop","display","flexDirection","alignItems","variant","initialValues","onSubmit","isSubmitting","mb","name","severity","as","label","fullWidth","helperText","autoComplete","autoFocus","type","disabled","mt","_c","$RefreshReg$"],"sources":["/home/raj/Documents/project/src/components/Auth/Login.jsx"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { login } from '../../api/userApi';\nimport { Box, Button, TextField, Typography, Container, CssBaseline, Alert } from '@mui/material';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\n// Validation schema using Yup\nconst validationSchema = Yup.object({\n  email: Yup.string()\n    .email('Invalid email address')\n    .required('Email is required'),\n  password: Yup.string()\n    .min(6, 'Password must be at least 6 characters')\n    .required('Password is required'),\n});\n\nconst Login = () => {\n  const navigate = useNavigate();\n\n  const handleLogin = async (values, { setSubmitting, setErrors }) => {\n    try {\n      const response = await login(values);\n      localStorage.setItem('token', response.data.token);\n      navigate('/users');\n    } catch (error) {\n      setErrors({ apiError: error.response?.data?.error || 'An unexpected error occurred' });\n    }\n    setSubmitting(false);\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Typography component=\"h1\" variant=\"h5\">\n          Login\n        </Typography>\n        <Formik\n          initialValues={{ email: '', password: '' }}\n          validationSchema={validationSchema}\n          onSubmit={handleLogin}\n        >\n          {({ isSubmitting }) => (\n            <Form>\n              <Box sx={{ mb: 2 }}>\n                {/* Display API Error */}\n                <ErrorMessage name=\"apiError\" component={Alert} severity=\"error\" />\n              </Box>\n\n              <Box sx={{ mb: 2 }}>\n                {/* Email Field */}\n                <Field\n                  as={TextField}\n                  name=\"email\"\n                  label=\"Email Address\"\n                  fullWidth\n                  error={!!(ErrorMessage && ErrorMessage.name === 'email')}\n                  helperText={<ErrorMessage name=\"email\" />}\n                  autoComplete=\"email\"\n                  autoFocus\n                />\n              </Box>\n\n              <Box sx={{ mb: 2 }}>\n                {/* Password Field */}\n                <Field\n                  as={TextField}\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  fullWidth\n                  error={!!(ErrorMessage && ErrorMessage.name === 'password')}\n                  helperText={<ErrorMessage name=\"password\" />}\n                  autoComplete=\"current-password\"\n                />\n              </Box>\n\n              {/* Submit Button */}\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                disabled={isSubmitting}\n                sx={{ mt: 3, mb: 2 }}\n              >\n                Log In\n              </Button>\n            </Form>\n          )}\n        </Formik>\n      </Box>\n    </Container>\n  );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}