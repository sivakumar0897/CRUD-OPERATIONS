{"ast":null,"code":"var _jsxFileName = \"/home/raj/Documents/project/src/components/Auth/Login.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useAuth } from \"../Auth/AuthContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { TextField, Button, Box, Typography, Container, Link } from \"@mui/material\";\nimport { login } from \"../../api/userApi\"; // Mock API\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const {\n    login: authenticate\n  } = useAuth();\n  const navigate = useNavigate();\n  const handleLogin = async values => {\n    try {\n      const response = await login(values);\n      authenticate(response.data.token); // Save token and authenticate user\n      toast.success(\"Login successful!\");\n      navigate(\"/users\");\n    } catch (error) {\n      toast.error(\"Invalid login credentials.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 8,\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: \"\",\n          password: \"\"\n        },\n        validationSchema: Yup.object({\n          email: Yup.string().email(\"Invalid email address\").required(\"Email is required\"),\n          password: Yup.string().required(\"Password is required\")\n        }),\n        onSubmit: handleLogin,\n        children: ({\n          isSubmitting,\n          errors,\n          touched\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            as: TextField,\n            name: \"email\",\n            label: \"Email\",\n            fullWidth: true,\n            margin: \"normal\",\n            variant: \"outlined\",\n            error: touched.email && !!errors.email,\n            helperText: touched.email && errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            as: TextField,\n            name: \"password\",\n            label: \"Password\",\n            type: \"password\",\n            fullWidth: true,\n            margin: \"normal\",\n            variant: \"outlined\",\n            error: touched.password && !!errors.password,\n            helperText: touched.password && errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\",\n            disabled: isSubmitting,\n            sx: {\n              mt: 3,\n              mb: 2\n            },\n            children: isSubmitting ? \"Logging in...\" : \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          textAlign: \"center\",\n          mt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [\"Forgot your password?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n            onClick: () => navigate(\"/forgot-password\"),\n            underline: \"hover\",\n            sx: {\n              cursor: \"pointer\"\n            },\n            children: \"Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            mt: 1\n          },\n          children: [\"Don't have an account?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n            onClick: () => navigate(\"/signup\"),\n            underline: \"hover\",\n            sx: {\n              cursor: \"pointer\"\n            },\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"3BPHpl0c9YrUbI1oQdIxqRDoHnI=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","Formik","Form","Field","Yup","useAuth","useNavigate","TextField","Button","Box","Typography","Container","Link","login","toast","jsxDEV","_jsxDEV","LoginPage","_s","authenticate","navigate","handleLogin","values","response","data","token","success","error","component","maxWidth","children","sx","mt","display","flexDirection","alignItems","variant","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","email","password","validationSchema","object","string","required","onSubmit","isSubmitting","errors","touched","as","name","label","fullWidth","margin","helperText","type","color","disabled","mb","textAlign","onClick","underline","cursor","_c","$RefreshReg$"],"sources":["/home/raj/Documents/project/src/components/Auth/Login.jsx"],"sourcesContent":["import React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useAuth } from \"../Auth/AuthContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { TextField, Button, Box, Typography, Container, Link } from \"@mui/material\";\nimport { login } from \"../../api/userApi\"; // Mock API\nimport { toast } from \"react-toastify\";\n\nconst LoginPage = () => {\n  const { login: authenticate } = useAuth();\n  const navigate = useNavigate();\n\n  const handleLogin = async (values) => {\n    try {\n      const response = await login(values);\n      authenticate(response.data.token); // Save token and authenticate user\n      toast.success(\"Login successful!\");\n      navigate(\"/users\");\n    } catch (error) {\n      toast.error(\"Invalid login credentials.\");\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Box\n        sx={{\n          mt: 8,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <Typography component=\"h1\" variant=\"h5\">\n          Login\n        </Typography>\n        <Formik\n          initialValues={{ email: \"\", password: \"\" }}\n          validationSchema={Yup.object({\n            email: Yup.string().email(\"Invalid email address\").required(\"Email is required\"),\n            password: Yup.string().required(\"Password is required\"),\n          })}\n          onSubmit={handleLogin}\n        >\n          {({ isSubmitting, errors, touched }) => (\n            <Form>\n              <Field\n                as={TextField}\n                name=\"email\"\n                label=\"Email\"\n                fullWidth\n                margin=\"normal\"\n                variant=\"outlined\"\n                error={touched.email && !!errors.email}\n                helperText={touched.email && errors.email}\n              />\n              <Field\n                as={TextField}\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                fullWidth\n                margin=\"normal\"\n                variant=\"outlined\"\n                error={touched.password && !!errors.password}\n                helperText={touched.password && errors.password}\n              />\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={isSubmitting}\n                sx={{ mt: 3, mb: 2 }}\n              >\n                {isSubmitting ? \"Logging in...\" : \"Login\"}\n              </Button>\n            </Form>\n          )}\n        </Formik>\n\n        {/* Forgot Password and Sign Up Links */}\n        <Box sx={{ textAlign: \"center\", mt: 2 }}>\n          <Typography variant=\"body2\">\n            Forgot your password?{\" \"}\n            <Link\n              onClick={() => navigate(\"/forgot-password\")}\n              underline=\"hover\"\n              sx={{ cursor: \"pointer\" }}\n            >\n              Reset Password\n            </Link>\n          </Typography>\n          <Typography variant=\"body2\" sx={{ mt: 1 }}>\n            Don't have an account?{\" \"}\n            <Link\n              onClick={() => navigate(\"/signup\")}\n              underline=\"hover\"\n              sx={{ cursor: \"pointer\" }}\n            >\n              Sign Up\n            </Link>\n          </Typography>\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}